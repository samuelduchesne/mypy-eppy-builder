{# modeleditor.pyi.jinja2 #}
from typing import overload, Literal

from {{ package.epbunch_path }} import EpBunch

{% for classname in classnames %}
from {{ package.data.pypi_stubs_name }}.{{ classname }} import {{ classname }}
{% endfor %}

class IDF:
{% for classname, ep_key in overloads %}
    @overload
    def newidfobject(self, key: Literal["{{ ep_key }}"], defaultvalues: bool = True, **kwargs) -> {{ classname }}: ...
    @overload
    def popidfobject(self, key: Literal["{{ ep_key }}"], index: int) -> {{ classname }}: ...
    @overload
    def getobject(self, key: Literal["{{ ep_key }}"], name: str) -> {{ classname }}: ...
    @overload
    def removeextensibles(self, key: Literal["{{ ep_key }}"], name: str) -> {{ classname }}: ...
{% endfor %}

    def newidfobject(self, key: str, defaultvalues: bool = True, **kwargs) -> EpBunch: ...
    def popidfobject(self, key: str, index: int) -> EpBunch: ...
    def getobject(self, key: str, name: str) -> EpBunch: ...
    def copyidfobject(self, idfobject: EpBunch) -> EpBunch: ...
    def removeextensibles(self, key: str, name: str) -> EpBunch: ...
