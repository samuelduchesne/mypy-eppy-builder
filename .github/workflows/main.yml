name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Run checks
        run: make check

  tests-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: uv run python -m pytest tests --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Check typing
        run: uv run pyright


      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.11' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Check if documentation can be built
        run: uv run mkdocs build -s

  generate-packages:
    runs-on: ubuntu-latest
    needs: [check-docs]
    strategy:
      matrix:
        package-type: ["eppy", "archetypal"]
        energyplus-version: ["23.1.0"]
        include:
          - energyplus-version: 23.1.0
            energyplus-sha: 87ed9199d4
            energyplus-install: 23-1-0
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Bump package version
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: uv version --bump

      - name: Commit version bump
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: bump version" || echo "No changes to commit"
          git push

      - name: Install EnergyPlus
        uses: Elementa-Engineering/install-energyplus@v1
        with:
          energyplus-version: ${{ matrix.energyplus-version }}
          energyplus-sha: ${{ matrix.energyplus-sha }}
          energyplus-install: ${{ matrix.energyplus-install }}

      - name: Generate package
        run: |
          uv run python src/mypy_eppy_builder/generate_package.py \
            --version ${{ matrix.energyplus-version }} \
            --idd-file /usr/local/EnergyPlus-${{ matrix.energyplus-install }}/Energy+.idd \
            --package-type ${{ matrix.package-type }}

      - name: Set package version from PyPI
        working-directory: generated_package/types-${{ matrix.package-type }}
        run: |
          PKG_NAME=$(python - <<'PY'
          import tomllib
          print(tomllib.load(open('pyproject.toml', 'rb'))['project']['name'])
          PY
          )
          NEXT_VERSION=$(python - <<'PY'
          import json, urllib.request, sys
          pkg = sys.argv[1]
          try:
              with urllib.request.urlopen(f"https://pypi.org/pypi/{pkg}/json") as resp:
                  ver = json.load(resp)["info"]["version"]
                  parts = ver.split(".")
                  next_version = f"{parts[0]}.{parts[1]}.{int(parts[2]) + 1}"
          except Exception:
              next_version = "0.1.0"
          print(next_version)
          PY
          "$PKG_NAME")
          uv version "$NEXT_VERSION"

      - name: Build package
        working-directory: generated_package/types-${{ matrix.package-type }}
        run: uv build

      - name: Publish package to PyPI
        working-directory: generated_package/types-${{ matrix.package-type }}
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
